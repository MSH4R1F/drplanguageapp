# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'
      - run: flutter --version

      
      # Fetches proj dependencies from pub
      - name: Install dependencies
        run: flutter pub get

        
        # ^ If you want to use a specific version of flutter
            # Verifies if the dart code is formatted well
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
        # --set-exit-if-changed stops execution if the any code is not well formatted
        # --output=none prints files which needs to be formatted

     # # Checks for Symantic errors. Can be configured using analysis_options.yaml
     #  - name: Analyze project source
     #    run: flutter analyze --fatal-warnings
     #    # optionally use --fatal-warnings to stop execution if any warnings are found

        
      # Runs unit test
      - name: Run tests
        run: flutter test

      # Build our flutter apk App and release it
      - run: flutter build apk
      - uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      
